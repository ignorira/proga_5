#include "matrix.h"


template <typename T, int N, int M>
T Matrix<T, N, M>::Get(int i, int j) const
{
    Check(i, j);
    return mat[i][j];
}

template <typename T, int N, int M>
void Matrix<T, N, M>::Set(int i, int j, T value)
{
    Check(i, j);
    mat[i][j] = value;
}

template <typename T, int N, int M>
void Matrix<T, N, M>::Print(const char* ObjName) const
{
    std::cout << "Object: " << ObjName << std::endl;
    for (int i = 0; i < M; i++) {
        for (int j = 0; j < N; j++) {
            std::cout << mat[i][j] << std::endl;
        }
        std::cout << std::endl;
    }
    std::cout << "---------------------\n\n";
}

template <typename T, int N, int M>
void Matrix<T, N, M>::Check(int i, int j) const
{
    if (i < 0 || j < 0 || i >= N || j >= M) {
        throw MyException("Out of range");
    }
}